Exception Handling:
 The Exception Handling in Java is one of the powerful mechanism to handle the runtime errors so that the normal flow of the application
can be maintained.

In Java, an exception is an event that occurs during the execution of a program that disrupts the normal flow of instructions.

Exception Handling is a mechanism to handle runtime errors such as ClassNotFoundException, IOException, SQLException, RemoteException, etc.

Types of Java Exceptions:
Checked Exception
Unchecked Exception
Error

1. Checked Exceptions: Checked exceptions are the exceptions that are checked at compile-time.
Ex:
IOException: An exception is thrown when an input/output operation fails, such as when reading from or writing to a file.
SQLException: It is thrown when an error occurs while accessing a database.
ParseException: Indicates a problem while parsing a string into another data type, such as parsing a date.

2. Unchecked Exceptions (Runtime Exceptions)
Unchecked exceptions, also known as runtime exceptions, are not checked at compile-time. 
These exceptions usually occur due to programming errors, such as logic errors or incorrect assumptions in the code.

ArrayIndexOutOfBoundsException: It occurs when we try to access an array element with an invalid index.
ArithmeticException: It is thrown when an arithmetic operation fails, such as division by zero.
NullPointerException
IllegalArgumentException

3. Errors
Errors represent exceptional conditions that are not expected to be caught under normal circumstances.

OutOfMemoryError: It occurs when the Java Virtual Machine (JVM) cannot allocate enough memory for the application.
StackOverflowError: It is thrown when the stack memory is exhausted due to excessive recursion.


 